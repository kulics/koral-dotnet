//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from KoralParser.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Compiler.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="KoralParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public interface IKoralParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] KoralParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.moduleDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitModuleDeclaration([NotNull] KoralParser.ModuleDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.globalDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalDeclaration([NotNull] KoralParser.GlobalDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.globalVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalVariableDeclaration([NotNull] KoralParser.GlobalVariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.globalFunctionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalFunctionDeclaration([NotNull] KoralParser.GlobalFunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.globalRecordDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalRecordDeclaration([NotNull] KoralParser.GlobalRecordDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.globalInterfaceDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalInterfaceDeclaration([NotNull] KoralParser.GlobalInterfaceDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.globalExtensionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalExtensionDeclaration([NotNull] KoralParser.GlobalExtensionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.globalSumTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitGlobalSumTypeDeclaration([NotNull] KoralParser.GlobalSumTypeDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.recordConstructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRecordConstructor([NotNull] KoralParser.RecordConstructorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.typeParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameterList([NotNull] KoralParser.TypeParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.typeParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeParameter([NotNull] KoralParser.TypeParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameterList([NotNull] KoralParser.ParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParameter([NotNull] KoralParser.ParameterContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.fieldList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFieldList([NotNull] KoralParser.FieldListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.field"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitField([NotNull] KoralParser.FieldContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.methodList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodList([NotNull] KoralParser.MethodListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.method"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethod([NotNull] KoralParser.MethodContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.virtualMethodList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVirtualMethodList([NotNull] KoralParser.VirtualMethodListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.virtualMethod"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVirtualMethod([NotNull] KoralParser.VirtualMethodContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] KoralParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.expressionOrControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionOrControl([NotNull] KoralParser.ExpressionOrControlContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.breakExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakExpression([NotNull] KoralParser.BreakExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.continueExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueExpression([NotNull] KoralParser.ContinueExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.returnExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnExpression([NotNull] KoralParser.ReturnExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.breakStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBreakStatement([NotNull] KoralParser.BreakStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.continueStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitContinueStatement([NotNull] KoralParser.ContinueStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] KoralParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] KoralParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.expressionWithTerminator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionWithTerminator([NotNull] KoralParser.ExpressionWithTerminatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] KoralParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.expressionWithBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionWithBlock([NotNull] KoralParser.ExpressionWithBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclaration([NotNull] KoralParser.VariableDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] KoralParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.memberAccessCallSuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberAccessCallSuffix([NotNull] KoralParser.MemberAccessCallSuffixContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.callSuffix"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCallSuffix([NotNull] KoralParser.CallSuffixContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.memberAccess"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMemberAccess([NotNull] KoralParser.MemberAccessContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.assignmentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpression([NotNull] KoralParser.AssignmentExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.assignmentExpressionWithBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentExpressionWithBlock([NotNull] KoralParser.AssignmentExpressionWithBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.lambdaExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLambdaExpression([NotNull] KoralParser.LambdaExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.ifThenExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfThenExpression([NotNull] KoralParser.IfThenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.ifThenExpressionWithBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfThenExpressionWithBlock([NotNull] KoralParser.IfThenExpressionWithBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.ifThenElseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfThenElseExpression([NotNull] KoralParser.IfThenElseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.ifThenElseExpressionWithBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfThenElseExpressionWithBlock([NotNull] KoralParser.IfThenElseExpressionWithBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.whileThenExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileThenExpression([NotNull] KoralParser.WhileThenExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.whileThenExpressionWithBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileThenExpressionWithBlock([NotNull] KoralParser.WhileThenExpressionWithBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.whileThenElseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileThenElseExpression([NotNull] KoralParser.WhileThenElseExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.whileThenElseExpressionWithBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileThenElseExpressionWithBlock([NotNull] KoralParser.WhileThenElseExpressionWithBlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.condition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCondition([NotNull] KoralParser.ConditionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.blockExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlockExpression([NotNull] KoralParser.BlockExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.pattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPattern([NotNull] KoralParser.PatternContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.typePattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypePattern([NotNull] KoralParser.TypePatternContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.deconstructPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeconstructPattern([NotNull] KoralParser.DeconstructPatternContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.identifierPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierPattern([NotNull] KoralParser.IdentifierPatternContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.wildcardPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWildcardPattern([NotNull] KoralParser.WildcardPatternContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.literalPattern"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralPattern([NotNull] KoralParser.LiteralPatternContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.primaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrimaryExpression([NotNull] KoralParser.PrimaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.constructExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitConstructExpression([NotNull] KoralParser.ConstructExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.functionCallExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] KoralParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.literalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] KoralParser.LiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitType([NotNull] KoralParser.TypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.functionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionType([NotNull] KoralParser.FunctionTypeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.typeIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTypeIdentifier([NotNull] KoralParser.TypeIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.variableIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableIdentifier([NotNull] KoralParser.VariableIdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.stringExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringExpression([NotNull] KoralParser.StringExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.runeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRuneExpression([NotNull] KoralParser.RuneExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.floatExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloatExpression([NotNull] KoralParser.FloatExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.boolExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolExpression([NotNull] KoralParser.BoolExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.integerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIntegerExpression([NotNull] KoralParser.IntegerExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.multiplicativeOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeOperator([NotNull] KoralParser.MultiplicativeOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.additiveOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveOperator([NotNull] KoralParser.AdditiveOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.logicAndOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicAndOperator([NotNull] KoralParser.LogicAndOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.logicOrOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicOrOperator([NotNull] KoralParser.LogicOrOperatorContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="KoralParser.compareOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCompareOperator([NotNull] KoralParser.CompareOperatorContext context);
}
} // namespace Compiler.Parser
